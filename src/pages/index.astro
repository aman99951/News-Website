---
import { connectToDatabase } from '../lib/mongodb.js';

// Define the Article interface
interface Article {
  title: string;
  date: string;
  author: string;
  content: string;
}

// Fetch articles on the server side
let articles: Article[] = [];

try {
  const db = await connectToDatabase();
  const articlesCollection = db.collection('articles');
  articles = await articlesCollection.find().toArray() as Article[];
  console.log(articles);
} catch (error) {
  console.error('Error fetching articles:', error);
  articles = [];
}
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>News Website</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 20px;
    }

    h1 {
      text-align: center;
      color: red;
    }

    ul {
      list-style-type: none;
      padding: 0;
    }

    li {
      background-color: #fff;
      margin: 20px 0;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s, box-shadow 0.3s;
    }

    li:hover {
      transform: translateY(-10px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    h2 {
      color: #333;
      margin-top: 0;
    }

    p {
      color: #666;
    }

    div {
      margin-top: 10px;
      color: #444;
    }
  </style>
</head>
<body>
  <h1>Latest News</h1>
  
  {articles.length === 0 ? (
    <p>Loading...</p>
  ) : (
    <ul>
      {articles.map((article: Article) => (
        <li>
          <h2>{article.title}</h2>
          <p>Date: {article.date}</p>
          <p>Author: {article.author}</p>
          <div>{article.content}</div>
        </li>
      ))}
    </ul>
  )}
</body>
</html>
